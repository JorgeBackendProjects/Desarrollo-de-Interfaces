/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Actividad5;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class Mostrar extends javax.swing.JPanel {

    private Connection conexion = null;
    private Statement sta;
    private ResultSet rs;
    private ResultSetMetaData rsmd;

    private DefaultTableModel modeloT;
    private JTable tabla;
    
    /**
     * Creates new form Mostrar1
     */
    public Mostrar() throws SQLException {
        initComponents();
        
        conexion();
        
        modeloT = new DefaultTableModel();
        modeloT.setColumnCount(6);
        
        tabla = new JTable(modeloT);
        tabla.setSize(700, 200);
        tabla.setLocation(50, 50);
        
        mostrarDatos(modeloT);
        
        this.add(tabla);
    }
    
    public void mostrarDatos(DefaultTableModel modelo) throws SQLException {
        // Borrar todas las filas en la tabla
        modelo.setRowCount(0);
        
        //Campos no editables
        tabla.setEnabled(false);

        String[] nombreColumnas = new String[]{"Nombre", "Tipo", "Otro_Opcion", "Edad", "Descripcion", "Raza"};
        modelo.addRow(nombreColumnas);

        realizarConsulta("Select * from mascota limit 5;");
        
        while(rs.next()){
            String[] datosFila = new String[]{rs.getString("nombre"), rs.getString("tipo"), rs.getString("otro_opcion"), rs.getInt("edad") + "", rs.getString("descripcion"), rs.getString("raza")};
            modelo.addRow(datosFila);
        }
        
    }
    
    public void conexion() throws SQLException {
        conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/desarrollointerfaces?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC", "root", "000000");
        sta = conexion.createStatement();
    }

    public ResultSet realizarConsulta(String consulta) throws SQLException {
        rs = sta.executeQuery(consulta);
        return rs;
    }

    public void manipularTablas(String consulta) throws SQLException {
        sta.executeUpdate(consulta);
    }

    public void cerrar() throws SQLException {
        rs.close();
        sta.close();
        conexion.close();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
